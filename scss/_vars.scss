$darker: #3E3C3C;
$dark: #5B5858;
$light: #F3F1F1;
$red: #DF2111;

%checkbox-hidden {
    width: 1px;
    height: 1px;
    overflow: hidden;
    clip: rect(0 0 0 0);
    position: absolute;
}

%li-reset {
    padding: 0;
    margin: 0;
    &::before{
        content: none;
        position: static;
        width: auto;
        height: auto;
        background: transparent;
        border-radius: 0;
    }
}

$maxWidth: 1920;
$maxWidthContainer: 1140;

@mixin adaptiveValue($property, $startSize, $endSize, $endWidth: 320, $type: 1) {
    $addSize: $startSize - $endSize;

    @if $type==1 {
        #{$property}: $startSize + px;

        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$endSize + px} + #{$addSize} * ((100vw - #{$endWidth + px}) / #{$maxWidthContainer - $endWidth}));
        }

        @media (max-width: #{$endWidth + px}) {
            #{$property}: #{$endSize + px};
        }
    }

    @else if $type==2 {
        #{$property}: $startSize + px;

        @media (min-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$endSize + px} + #{$addSize} * ((100vw - #{$endWidth + px}) / #{$maxWidth - $endWidth}));
        }
    }

    @else {
        #{$property}: calc(#{$endSize + px} + #{$addSize} * ((100vw - #{$endWidth + px}) / #{$maxWidth - $endWidth}));
    }
}

// @include adaptiveValue(width, 100, 10);

// width: 35px;
// @media (max-width: 1140px) {
//     width: (10px + (35 - 10) * ((100vw - 320px) / (1140 - 320)));
// }

%lcg-500 {
    font-family: 'Graphik LCG', sans-serif;
    font-weight: 500;
}

%lcg-400 {
    font-family: 'Graphik LCG', sans-serif;
    font-weight: 400;
}